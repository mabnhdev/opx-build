#! /bin/bash
#
# Copyright (c) 2017 Dell Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
# LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS
# FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
#
# See the Apache Version 2.0 License for specific language governing
# permissions and limitations under the License.
#

set -e
set +x

# If DIST isn't already set up, default to the host system's distribution.
[ -z "$DIST" ] && DIST=$(lsb_release --codename --short)

# Define list of repositories in dependency order.
# 
# TODO: read the debian/control files and compute the dependency graph.
repos=( opx-logging
	opx-common-utils
	opx-cps
	opx-base-model
	opx-db-sql
	opx-sai-api
	opx-sai-common-utils
	opx-sai-common
	opx-sai-vm
	opx-nas-common
	opx-nas-linux
	opx-nas-ndi-api
	opx-nas-ndi
	opx-nas-acl
	opx-nas-interface
	opx-nas-l2
	opx-nas-l3
	opx-nas-qos
	opx-nas-daemon
	opx-platform-config
	opx-sdi-api
	opx-sdi-framework
	opx-sdi-device-drivers
	opx-sdi-sys
	opx-sdi-sys-vm
	opx-pas
	opx-tmpctl
	)

if [ ! -z "$1" ] && [ "$1" != "all" ]; then
    repos=( "$@" )
fi

# Use temporary output directory isolate the output of each build
export GIT_PBUILDER_OUTPUT_DIR=$(mktemp -d)
trap "rm -rf ${GIT_PBUILDER_OUTPUT_DIR}" EXIT

for r in ${repos[*]}; do
    if [ ! -d $r ]; then
	    continue
    fi
    (
	cd $r
	gbp buildpackage --git-dist=$DIST --git-pbuilder --git-ignore-branch --git-ignore-new

	sudo cp ${GIT_PBUILDER_OUTPUT_DIR}/*.deb /var/cache/pbuilder/result
	cp ${GIT_PBUILDER_OUTPUT_DIR}/*.deb ..

	# clear output directory for next package
	rm -rf ${GIT_PBUILDER_OUTPUT_DIR}/*
    )
done
